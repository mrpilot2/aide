@PACKAGE_INIT@

list(APPEND CMAKE_MODULE_PATH ${CMAKE_CURRENT_BINARY_DIR})
list(APPEND CMAKE_PREFIX_PATH ${CMAKE_CURRENT_BINARY_DIR})

# Download automatically, you can also just copy the conan.cmake file
if(NOT EXISTS "${CMAKE_CURRENT_BINARY_DIR}/conan.cmake")
  message(
    STATUS
      "Downloading conan.cmake from https://github.com/conan-io/cmake-conan"
  )
  file(
    DOWNLOAD
    "https://raw.githubusercontent.com/conan-io/cmake-conan/0.18.1/conan.cmake"
    "${CMAKE_CURRENT_BINARY_DIR}/conan.cmake"
    TLS_VERIFY ON
  )
endif()

include(${CMAKE_CURRENT_BINARY_DIR}/conan.cmake)

conan_add_remote(
  NAME conancenter URL https://center.conan.io
)

conan_cmake_configure(
  REQUIRES spdlog/1.8.5 fmt/7.1.3 GENERATORS cmake_find_package
)

conan_cmake_autodetect(settings)

conan_cmake_install(
  PATH_OR_REFERENCE
  .
  BUILD
  missing
  SETTINGS
  ${settings}
  OUTPUT_QUIET
)

find_package(spdlog)
find_package(fmt)

include("${CMAKE_CURRENT_LIST_DIR}/AideQt@QT_VERSION_MAJOR@Targets.cmake")

# Create versionless targets
add_library(Aide::AideApplication INTERFACE IMPORTED)

set_target_properties(Aide::AideApplication PROPERTIES
  INTERFACE_LINK_LIBRARIES Aide::AideQt@QT_VERSION_MAJOR@Application
)

add_library(Aide::AideWidgets INTERFACE IMPORTED)

set_target_properties(Aide::AideWidgets PROPERTIES
  INTERFACE_LINK_LIBRARIES Aide::AideQt@QT_VERSION_MAJOR@Widgets
)


include(CMakeFindDependencyMacro)

find_dependency(Qt@QT_VERSION_MAJOR@ COMPONENTS Core Widgets)

if(TARGET Qt5::Core)
  if(NOT TARGET Qt::Core)
    add_library(Qt::Core ALIAS Qt5::Core)
    add_library(Qt::Widgets ALIAS Qt5::Widgets)
  endif()
endif()
